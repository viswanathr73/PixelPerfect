export const objectToString: (o: any) => string;
export const isArray: (arg: any) => arg is any[];
export const isBoolean: (arg: any) => boolean;
export const isNullOrUndefined: (arg: any) => boolean;
export const isString: (arg: any) => boolean;
export const isNumber: (arg: any) => boolean;
export const isUndefined: (arg: any) => boolean;
export const isNull: (v: any) => boolean;
export const isError: (e: any) => boolean;
export const isPrimitive: (arg: any) => boolean;
export const format: typeof import("./format");
export const inspect: typeof import("./inspect");
export const log: (...args: any[]) => void;
export const isObject: (arg: any) => boolean;
export const isFunction: (arg: any) => boolean;
export const isDate: (d: any) => boolean;
export const isRegExp: (v: any) => boolean;
export const isArguments: (value: any) => boolean;
export const isEmpty: (value: any) => boolean;
export const isEmptyObject: (obj: any) => boolean;
export const inheritsDirectly: any;
export const inherits: any;
export const isInheritedFrom: any;
export const isInheritedFromStr: any;
export const newPrototype: any;
export const createObjectWith: any;
export const createObject: any;
export function createObjectOld(aClass: any, aArguments: any): any;
export const isEmptyFunction: any;
export const _extend: any;
export const inheritsObject: any;
export const getConstructor: any;
export const inject: typeof import("./inject");
