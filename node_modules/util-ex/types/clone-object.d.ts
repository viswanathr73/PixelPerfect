export = cloneObject;
/**
 * Clones an object.
 *
 * @param {Object} aObject - The object to be cloned.
 * @param {boolean|function} [tryCloneFn=true] - A boolean indicating whether or not to try to clone the object using a '`clone`' function, or a function that can be used to clone the object. If set to `false`, the object will not be cloned using the '`clone`' function, even if it exists.
 * @returns {Object} The cloned object.
 *
 * @example
* // Clone a simple object.
* var myObject = { foo: 'bar' };
* var clonedObject = cloneObject(myObject);
*
* @example
* // Clone an object using a custom clone function.
* var myObject = { foo: 'bar', clone: function() { return { foo: this.foo }; } };
* var clonedObject = cloneObject(myObject);
*
* @example
* // Clone an object without trying to use a custom clone function.
* var myObject = { foo: 'bar', clone: function() { return { foo: this.foo }; } };
* var clonedObject = cloneObject(myObject, false);
*/
declare function cloneObject(aObject: any, tryCloneFn?: boolean | Function): any;
