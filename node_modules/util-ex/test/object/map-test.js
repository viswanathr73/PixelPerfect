// Generated by CoffeeScript 1.12.7
var assert, chai, defineProperty, should, sinon, sinonChai;

chai = require('chai');

sinon = require('sinon');

sinonChai = require('sinon-chai');

assert = chai.assert;

should = chai.should();

chai.use(sinonChai);

defineProperty = require('../../src/defineProperty');

describe('object/map', function() {
  var map;
  map = require('../../src/object/map');
  it('should map an object values to an array', function() {
    var result;
    result = map({
      a: 23,
      b: 34,
      c: 'dfg'
    });
    return result.should.be.deep.equal([23, 34, 'dfg']);
  });
  it('should map an object all(includes non-enumerable) values to an array', function() {
    var obj, result;
    obj = {
      a: 23,
      b: 34
    };
    defineProperty(obj, 'nonEnum', 'hi');
    result = map(obj, {
      nonEnumerable: true
    });
    return result.should.be.deep.equal([23, 34, 'hi']);
  });
  return it('should map an object non-enumerable values to an array', function() {
    var obj, result;
    obj = {
      a: 23,
      b: 34
    };
    defineProperty(obj, 'nonEnum', 'hi');
    result = map(obj, {
      nonEnumerable: true,
      enumerable: false
    });
    return result.should.be.deep.equal(['hi']);
  });
});
